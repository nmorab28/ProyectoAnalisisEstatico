name: CI - Build, Test & SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para análisis correcto en SonarCloud

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Crear archivos necesarios para pruebas
      - name: Crear archivo ISUCI.properties
        run: |
          echo "usuario=test" > src/main/resources/ISUCI.properties
          echo "clave=test123" >> src/main/resources/ISUCI.properties
          echo "host=smtp.test.com" >> src/main/resources/ISUCI.properties
          echo "mailgun.host=smtp.mailgun.org" >> src/main/resources/ISUCI.properties
          echo "mailgun.port=587" >> src/main/resources/ISUCI.properties
          echo "mailgun.username=test@example.com" >> src/main/resources/ISUCI.properties
          echo "mailgun.password=testpassword" >> src/main/resources/ISUCI.properties

      - name: Crear archivo Ciclistas.dat
        run: echo "" > Ciclistas.dat

      # Ejecutar pruebas y análisis SonarCloud
      - name: Build, Test and Analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Djava.awt.headless=true \
          -Dsonar.projectKey=nmorab28_ProyectoAnalisisEstatico \
          -Dsonar.organization=nmorab28 \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}